[04/18 14:03:30] detectron2 INFO: Rank of current process: 0. World size: 1
[04/18 14:03:31] detectron2 INFO: Environment info:
----------------------  ---------------------------------------------------------------------
sys.platform            linux
Python                  3.6.13 |Anaconda, Inc.| (default, Jun  4 2021, 14:25:59) [GCC 7.5.0]
numpy                   1.19.2
detectron2              0.6 @/home/xunxun/backup/detectron2/detectron206/detectron2
Compiler                GCC 5.4
CUDA compiler           CUDA 11.3
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0 @/opt/conda/envs/det06/lib/python3.6/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1                 NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          515.105.01
CUDA_HOME               /usr/local/cuda
Pillow                  8.3.1
torchvision             0.11.0 @/opt/conda/envs/det06/lib/python3.6/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     3.4.5
----------------------  ---------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[04/18 14:03:31] detectron2 INFO: Command line arguments: Namespace(config_file='/home/xunxun/workspace/dcdet/SAPN/sap-da-detectron2/configs/baseline_R_50_C4_1x-city2foggy.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False, setting_token=None, test_images=False)
[04/18 14:03:31] detectron2 INFO: Contents of args.config_file=/home/xunxun/workspace/dcdet/SAPN/sap-da-detectron2/configs/baseline_R_50_C4_1x-city2foggy.yaml:
_BASE_: "./Base-RCNN-C4.yaml"
DATASETS:
  SOURCE_DOMAIN:
    TRAIN: ("spines_3yuan_train",)
  TARGET_DOMAIN:
    TRAIN: ("spines_mianyang_train",)
  TRAIN: ("spines_3yuan_train",)
  TEST: ("spines_mianyang_val",)
MODEL:
  DEVICE: "cuda:1"
  META_ARCHITECTURE: "SAPRCNN"
  BACKBONE:
    FREEZE_AT: 1
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  KEYPOINT_ON: False
  MASK_ON: True
  DOMAIN_ADAPTATION_ON: False
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
  ROI_HEADS:
    NUM_CLASSES: 8
  DA_HEAD:
    IN_FEATURE: "res4"
    IN_CHANNELS: 1024
    NUM_ANCHOR_IN_IMG: 5
    EMBEDDING_KERNEL_SIZE: 3
    EMBEDDING_NORM: True
    EMBEDDING_DROPOUT: True
    FUNC_NAME: "cross_entropy"
    POOL_TYPE: 'avg'
    LOSS_WEIGHT: 1.0
    WINDOW_STRIDES: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    WINDOW_SIZES: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 35, 37]
  PROPOSAL_GENERATOR:
    NAME: "SAPRPN"
INPUT:
  MIN_SIZE_TRAIN: (800, 832, 864, 864, 896, 928, 960, 992, 1024)
  MIN_SIZE_TRAIN_SAMPLING: "choice"
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TRAIN: 2048
  MAX_SIZE_TEST: 2048
SOLVER:
  IMS_PER_BATCH: 2 # batch size
  STEPS: (80000,)
  BASE_LR: 0.001
  MAX_ITER: 90000
  CHECKPOINT_PERIOD: 5000
TEST:
  EVAL_PERIOD: 5000
[04/18 14:03:31] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  SOURCE_DOMAIN:
    TRAIN:
    - spines_3yuan_train
  TARGET_DOMAIN:
    TRAIN:
    - spines_mianyang_train
  TEST:
  - spines_mianyang_val
  TRAIN:
  - spines_3yuan_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 2048
  MAX_SIZE_TRAIN: 2048
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  - 832
  - 864
  - 864
  - 896
  - 928
  - 960
  - 992
  - 1024
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 1
    NAME: build_resnet_backbone
  DA_HEAD:
    EMBEDDING_DROPOUT: true
    EMBEDDING_KERNEL_SIZE: 3
    EMBEDDING_NORM: true
    FUNC_NAME: cross_entropy
    IN_CHANNELS: 1024
    IN_FEATURE: res4
    LOSS_WEIGHT: 1.0
    NUM_ANCHOR_IN_IMG: 5
    POOL_TYPE: avg
    WINDOW_SIZES:
    - 3
    - 6
    - 9
    - 12
    - 15
    - 18
    - 21
    - 24
    - 27
    - 30
    - 33
    - 35
    - 37
    WINDOW_STRIDES:
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
    - 2
  DEVICE: cuda:1
  DOMAIN_ADAPTATION_ON: false
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: true
  META_ARCHITECTURE: SAPRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: SAPRPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS:
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS:
    - 10.0
    - 10.0
    - 5.0
    - 5.0
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 8
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS:
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./outputs/output-23-04-18_14-03
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.001
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 2
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: false
  REFERENCE_WORLD_SIZE: 0
  STEPS:
  - 80000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 5000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[04/18 14:03:31] detectron2 INFO: Full config saved to ./outputs/output-23-04-18_14-03/config.yaml
[04/18 14:03:31] d2.utils.env INFO: Using a generated random seed 32286573
[04/18 14:03:34] d2.engine.defaults INFO: Model:
SAPRCNN(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
  )
  (proposal_generator): SAPRPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(1024, 15, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(1024, 60, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): Res5ROIHeads(
    (pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=2048, out_features=9, bias=True)
      (bbox_pred): Linear(in_features=2048, out_features=32, bias=True)
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 8, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[04/18 14:03:34] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[04/18 14:03:34] d2.data.datasets.coco INFO: Loaded 2041 images in COCO format from /home/xunxun/workspace/sada/sa-da-faster-master/maskrcnn_benchmark/datasets/spine/3yuan/train_one.json
[04/18 14:03:34] d2.data.build INFO: Removed 0 images with no usable annotations. 2041 images left.
[04/18 14:03:34] d2.data.build INFO: Distribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|     s      | 36658        |
|            |              |[0m
[04/18 14:03:34] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800, 832, 864, 864, 896, 928, 960, 992, 1024), max_size=2048, sample_style='choice'), RandomFlip()]
[04/18 14:03:34] d2.data.build INFO: Using training sampler TrainingSampler
[04/18 14:03:34] d2.data.common INFO: Serializing 2041 elements to byte tensors and concatenating them all ...
[04/18 14:03:34] d2.data.common INFO: Serialized dataset takes 2.87 MiB
[04/18 14:03:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[04/18 14:03:34] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[04/18 14:03:34] d2.checkpoint.c2_model_loading INFO: Following weights matched with model:
| Names in Model              | Names in Checkpoint      | Shapes                                          |
|:----------------------------|:-------------------------|:------------------------------------------------|
| backbone.res2.0.conv1.*     | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| backbone.res2.0.conv2.*     | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| backbone.res2.0.conv3.*     | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| backbone.res2.0.shortcut.*  | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| backbone.res2.1.conv1.*     | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| backbone.res2.1.conv2.*     | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| backbone.res2.1.conv3.*     | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| backbone.res2.2.conv1.*     | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| backbone.res2.2.conv2.*     | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| backbone.res2.2.conv3.*     | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| backbone.res3.0.conv1.*     | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| backbone.res3.0.conv2.*     | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| backbone.res3.0.conv3.*     | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| backbone.res3.0.shortcut.*  | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| backbone.res3.1.conv1.*     | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| backbone.res3.1.conv2.*     | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| backbone.res3.1.conv3.*     | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| backbone.res3.2.conv1.*     | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| backbone.res3.2.conv2.*     | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| backbone.res3.2.conv3.*     | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| backbone.res3.3.conv1.*     | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| backbone.res3.3.conv2.*     | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| backbone.res3.3.conv3.*     | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| backbone.res4.0.conv1.*     | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| backbone.res4.0.conv2.*     | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| backbone.res4.0.conv3.*     | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| backbone.res4.0.shortcut.*  | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| backbone.res4.1.conv1.*     | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| backbone.res4.1.conv2.*     | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| backbone.res4.1.conv3.*     | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| backbone.res4.2.conv1.*     | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| backbone.res4.2.conv2.*     | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| backbone.res4.2.conv3.*     | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| backbone.res4.3.conv1.*     | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| backbone.res4.3.conv2.*     | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| backbone.res4.3.conv3.*     | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| backbone.res4.4.conv1.*     | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| backbone.res4.4.conv2.*     | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| backbone.res4.4.conv3.*     | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| backbone.res4.5.conv1.*     | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| backbone.res4.5.conv2.*     | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| backbone.res4.5.conv3.*     | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| backbone.stem.conv1.norm.*  | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| backbone.stem.conv1.weight  | conv1_w                  | (64, 3, 7, 7)                                   |
| roi_heads.res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| roi_heads.res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| roi_heads.res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| roi_heads.res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| roi_heads.res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| roi_heads.res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| roi_heads.res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| roi_heads.res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| roi_heads.res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| roi_heads.res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
[04/18 14:03:34] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[34mroi_heads.mask_head.deconv.{bias, weight}[0m
[34mroi_heads.mask_head.mask_fcn1.{bias, weight}[0m
[34mroi_heads.mask_head.mask_fcn2.{bias, weight}[0m
[34mroi_heads.mask_head.mask_fcn3.{bias, weight}[0m
[34mroi_heads.mask_head.mask_fcn4.{bias, weight}[0m
[34mroi_heads.mask_head.predictor.{bias, weight}[0m
[04/18 14:03:34] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[04/18 14:03:34] d2.engine.train_loop INFO: Starting training from iteration 0
[04/18 14:03:44] d2.utils.events INFO:  eta: 10:42:37  iter: 19  total_loss: 3.564  loss_cls: 2.083  loss_box_reg: 0.01436  loss_mask: 0.6905  loss_rpn_cls: 0.6931  loss_rpn_loc: 0.08158  time: 0.4231  data_time: 0.0415  lr: 1.9981e-05  max_mem: 0M
[04/18 14:03:53] d2.utils.events INFO:  eta: 10:32:31  iter: 39  total_loss: 1.779  loss_cls: 0.3667  loss_box_reg: 0.01699  loss_mask: 0.6297  loss_rpn_cls: 0.6842  loss_rpn_loc: 0.07788  time: 0.4198  data_time: 0.0035  lr: 3.9961e-05  max_mem: 0M
[04/18 14:04:01] d2.utils.events INFO:  eta: 10:36:07  iter: 59  total_loss: 1.623  loss_cls: 0.292  loss_box_reg: 0.05047  loss_mask: 0.5748  loss_rpn_cls: 0.6464  loss_rpn_loc: 0.06997  time: 0.4227  data_time: 0.0035  lr: 5.9941e-05  max_mem: 0M
[04/18 14:04:10] d2.utils.events INFO:  eta: 10:34:14  iter: 79  total_loss: 1.658  loss_cls: 0.235  loss_box_reg: 0.1435  loss_mask: 0.602  loss_rpn_cls: 0.5916  loss_rpn_loc: 0.06892  time: 0.4214  data_time: 0.0034  lr: 7.9921e-05  max_mem: 0M
[04/18 14:04:18] d2.utils.events INFO:  eta: 10:35:38  iter: 99  total_loss: 1.636  loss_cls: 0.2352  loss_box_reg: 0.2432  loss_mask: 0.5962  loss_rpn_cls: 0.5134  loss_rpn_loc: 0.06361  time: 0.4225  data_time: 0.0035  lr: 9.9901e-05  max_mem: 0M
[04/18 14:04:27] d2.utils.events INFO:  eta: 10:37:17  iter: 119  total_loss: 1.502  loss_cls: 0.2298  loss_box_reg: 0.3136  loss_mask: 0.6008  loss_rpn_cls: 0.3203  loss_rpn_loc: 0.06213  time: 0.4239  data_time: 0.0034  lr: 0.00011988  max_mem: 0M
[04/18 14:04:35] d2.utils.events INFO:  eta: 10:39:00  iter: 139  total_loss: 1.384  loss_cls: 0.22  loss_box_reg: 0.3489  loss_mask: 0.5729  loss_rpn_cls: 0.1992  loss_rpn_loc: 0.0623  time: 0.4249  data_time: 0.0033  lr: 0.00013986  max_mem: 0M
[04/18 14:04:44] d2.utils.events INFO:  eta: 10:41:08  iter: 159  total_loss: 1.446  loss_cls: 0.2379  loss_box_reg: 0.394  loss_mask: 0.5833  loss_rpn_cls: 0.164  loss_rpn_loc: 0.0594  time: 0.4260  data_time: 0.0035  lr: 0.00015984  max_mem: 0M
[04/18 14:04:53] d2.utils.events INFO:  eta: 10:43:17  iter: 179  total_loss: 1.37  loss_cls: 0.2198  loss_box_reg: 0.3837  loss_mask: 0.5533  loss_rpn_cls: 0.1471  loss_rpn_loc: 0.05594  time: 0.4276  data_time: 0.0035  lr: 0.00017982  max_mem: 0M
[04/18 14:05:02] d2.utils.events INFO:  eta: 10:44:05  iter: 199  total_loss: 1.334  loss_cls: 0.1987  loss_box_reg: 0.3917  loss_mask: 0.5316  loss_rpn_cls: 0.1468  loss_rpn_loc: 0.04971  time: 0.4282  data_time: 0.0034  lr: 0.0001998  max_mem: 0M
[04/18 14:05:10] d2.utils.events INFO:  eta: 10:45:47  iter: 219  total_loss: 1.394  loss_cls: 0.218  loss_box_reg: 0.4534  loss_mask: 0.5229  loss_rpn_cls: 0.1176  loss_rpn_loc: 0.04888  time: 0.4291  data_time: 0.0032  lr: 0.00021978  max_mem: 0M
[04/18 14:05:19] d2.utils.events INFO:  eta: 10:47:30  iter: 239  total_loss: 1.369  loss_cls: 0.2143  loss_box_reg: 0.4635  loss_mask: 0.5084  loss_rpn_cls: 0.1281  loss_rpn_loc: 0.05271  time: 0.4303  data_time: 0.0035  lr: 0.00023976  max_mem: 0M
[04/18 14:05:28] d2.utils.events INFO:  eta: 10:48:21  iter: 259  total_loss: 1.351  loss_cls: 0.2011  loss_box_reg: 0.4823  loss_mask: 0.4999  loss_rpn_cls: 0.1108  loss_rpn_loc: 0.04906  time: 0.4320  data_time: 0.0034  lr: 0.00025974  max_mem: 0M
[04/18 14:05:37] d2.utils.events INFO:  eta: 10:48:12  iter: 279  total_loss: 1.484  loss_cls: 0.2311  loss_box_reg: 0.5595  loss_mask: 0.5069  loss_rpn_cls: 0.112  loss_rpn_loc: 0.0479  time: 0.4321  data_time: 0.0033  lr: 0.00027972  max_mem: 0M
[04/18 14:05:46] d2.utils.events INFO:  eta: 10:50:32  iter: 299  total_loss: 1.449  loss_cls: 0.2304  loss_box_reg: 0.5522  loss_mask: 0.5017  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.04901  time: 0.4330  data_time: 0.0033  lr: 0.0002997  max_mem: 0M
[04/18 14:05:55] d2.utils.events INFO:  eta: 10:51:04  iter: 319  total_loss: 1.445  loss_cls: 0.2374  loss_box_reg: 0.583  loss_mask: 0.483  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.04408  time: 0.4335  data_time: 0.0034  lr: 0.00031968  max_mem: 0M
[04/18 14:06:04] d2.utils.events INFO:  eta: 10:52:22  iter: 339  total_loss: 1.403  loss_cls: 0.2224  loss_box_reg: 0.5667  loss_mask: 0.4614  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.04527  time: 0.4344  data_time: 0.0035  lr: 0.00033966  max_mem: 0M
[04/18 14:06:13] d2.utils.events INFO:  eta: 10:52:41  iter: 359  total_loss: 1.443  loss_cls: 0.2155  loss_box_reg: 0.6215  loss_mask: 0.4579  loss_rpn_cls: 0.09555  loss_rpn_loc: 0.04313  time: 0.4350  data_time: 0.0034  lr: 0.00035964  max_mem: 0M
[04/18 14:06:22] d2.utils.events INFO:  eta: 10:53:24  iter: 379  total_loss: 1.439  loss_cls: 0.2391  loss_box_reg: 0.6302  loss_mask: 0.4395  loss_rpn_cls: 0.09008  loss_rpn_loc: 0.04332  time: 0.4355  data_time: 0.0034  lr: 0.00037962  max_mem: 0M
[04/18 14:06:31] d2.utils.events INFO:  eta: 10:54:41  iter: 399  total_loss: 1.39  loss_cls: 0.2266  loss_box_reg: 0.6121  loss_mask: 0.4258  loss_rpn_cls: 0.08862  loss_rpn_loc: 0.04694  time: 0.4362  data_time: 0.0033  lr: 0.0003996  max_mem: 0M
[04/18 14:06:40] d2.utils.events INFO:  eta: 10:55:25  iter: 419  total_loss: 1.333  loss_cls: 0.219  loss_box_reg: 0.5939  loss_mask: 0.4019  loss_rpn_cls: 0.08127  loss_rpn_loc: 0.04111  time: 0.4371  data_time: 0.0035  lr: 0.00041958  max_mem: 0M
[04/18 14:06:49] d2.utils.events INFO:  eta: 10:55:50  iter: 439  total_loss: 1.302  loss_cls: 0.2055  loss_box_reg: 0.5778  loss_mask: 0.3873  loss_rpn_cls: 0.0827  loss_rpn_loc: 0.04097  time: 0.4377  data_time: 0.0033  lr: 0.00043956  max_mem: 0M
[04/18 14:06:58] d2.utils.events INFO:  eta: 10:56:00  iter: 459  total_loss: 1.316  loss_cls: 0.1946  loss_box_reg: 0.6074  loss_mask: 0.3796  loss_rpn_cls: 0.07374  loss_rpn_loc: 0.03653  time: 0.4381  data_time: 0.0032  lr: 0.00045954  max_mem: 0M
[04/18 14:07:07] d2.utils.events INFO:  eta: 10:56:19  iter: 479  total_loss: 1.272  loss_cls: 0.2219  loss_box_reg: 0.5375  loss_mask: 0.3779  loss_rpn_cls: 0.07579  loss_rpn_loc: 0.04048  time: 0.4386  data_time: 0.0032  lr: 0.00047952  max_mem: 0M
[04/18 14:07:16] d2.utils.events INFO:  eta: 10:56:54  iter: 499  total_loss: 1.255  loss_cls: 0.1946  loss_box_reg: 0.5777  loss_mask: 0.3639  loss_rpn_cls: 0.07501  loss_rpn_loc: 0.04412  time: 0.4393  data_time: 0.0034  lr: 0.0004995  max_mem: 0M
[04/18 14:07:25] d2.utils.events INFO:  eta: 10:57:35  iter: 519  total_loss: 1.259  loss_cls: 0.1992  loss_box_reg: 0.5936  loss_mask: 0.3607  loss_rpn_cls: 0.06304  loss_rpn_loc: 0.04026  time: 0.4399  data_time: 0.0034  lr: 0.00051948  max_mem: 0M
[04/18 14:07:34] d2.utils.events INFO:  eta: 10:58:21  iter: 539  total_loss: 1.166  loss_cls: 0.1928  loss_box_reg: 0.54  loss_mask: 0.3432  loss_rpn_cls: 0.06619  loss_rpn_loc: 0.04219  time: 0.4404  data_time: 0.0033  lr: 0.00053946  max_mem: 0M
[04/18 14:07:43] d2.utils.events INFO:  eta: 10:59:02  iter: 559  total_loss: 1.088  loss_cls: 0.182  loss_box_reg: 0.5062  loss_mask: 0.3089  loss_rpn_cls: 0.05977  loss_rpn_loc: 0.03853  time: 0.4411  data_time: 0.0033  lr: 0.00055944  max_mem: 0M
[04/18 14:07:52] d2.utils.events INFO:  eta: 10:59:19  iter: 579  total_loss: 1.146  loss_cls: 0.1925  loss_box_reg: 0.543  loss_mask: 0.3089  loss_rpn_cls: 0.05359  loss_rpn_loc: 0.03482  time: 0.4414  data_time: 0.0033  lr: 0.00057942  max_mem: 0M
[04/18 14:08:02] d2.utils.events INFO:  eta: 11:01:05  iter: 599  total_loss: 1.132  loss_cls: 0.206  loss_box_reg: 0.5233  loss_mask: 0.3162  loss_rpn_cls: 0.05129  loss_rpn_loc: 0.03612  time: 0.4423  data_time: 0.0035  lr: 0.0005994  max_mem: 0M
[04/18 14:08:11] d2.utils.events INFO:  eta: 11:01:25  iter: 619  total_loss: 1.12  loss_cls: 0.1886  loss_box_reg: 0.5187  loss_mask: 0.3211  loss_rpn_cls: 0.055  loss_rpn_loc: 0.0358  time: 0.4426  data_time: 0.0035  lr: 0.00061938  max_mem: 0M
[04/18 14:08:20] d2.utils.events INFO:  eta: 11:01:35  iter: 639  total_loss: 1.131  loss_cls: 0.1914  loss_box_reg: 0.5418  loss_mask: 0.3046  loss_rpn_cls: 0.0493  loss_rpn_loc: 0.03443  time: 0.4428  data_time: 0.0033  lr: 0.00063936  max_mem: 0M
[04/18 14:08:29] d2.utils.events INFO:  eta: 11:02:57  iter: 659  total_loss: 1.196  loss_cls: 0.2142  loss_box_reg: 0.5394  loss_mask: 0.3153  loss_rpn_cls: 0.05936  loss_rpn_loc: 0.03734  time: 0.4432  data_time: 0.0034  lr: 0.00065934  max_mem: 0M
[04/18 14:08:38] d2.utils.events INFO:  eta: 11:03:38  iter: 679  total_loss: 1.087  loss_cls: 0.1805  loss_box_reg: 0.5212  loss_mask: 0.2987  loss_rpn_cls: 0.04637  loss_rpn_loc: 0.03943  time: 0.4438  data_time: 0.0034  lr: 0.00067932  max_mem: 0M
[04/18 14:08:47] d2.utils.events INFO:  eta: 11:04:12  iter: 699  total_loss: 1.002  loss_cls: 0.1635  loss_box_reg: 0.4927  loss_mask: 0.2823  loss_rpn_cls: 0.03429  loss_rpn_loc: 0.03375  time: 0.4443  data_time: 0.0034  lr: 0.0006993  max_mem: 0M
[04/18 14:08:56] d2.utils.events INFO:  eta: 11:04:46  iter: 719  total_loss: 1.031  loss_cls: 0.1712  loss_box_reg: 0.4951  loss_mask: 0.2805  loss_rpn_cls: 0.0426  loss_rpn_loc: 0.03895  time: 0.4446  data_time: 0.0033  lr: 0.00071928  max_mem: 0M
[04/18 14:09:06] d2.utils.events INFO:  eta: 11:05:28  iter: 739  total_loss: 1.058  loss_cls: 0.1789  loss_box_reg: 0.5245  loss_mask: 0.2845  loss_rpn_cls: 0.04111  loss_rpn_loc: 0.03717  time: 0.4450  data_time: 0.0033  lr: 0.00073926  max_mem: 0M
[04/18 14:09:15] d2.utils.events INFO:  eta: 11:05:43  iter: 759  total_loss: 1.131  loss_cls: 0.1833  loss_box_reg: 0.5615  loss_mask: 0.2922  loss_rpn_cls: 0.04104  loss_rpn_loc: 0.04329  time: 0.4453  data_time: 0.0035  lr: 0.00075924  max_mem: 0M
[04/18 14:09:24] d2.utils.events INFO:  eta: 11:06:28  iter: 779  total_loss: 1.01  loss_cls: 0.1694  loss_box_reg: 0.4768  loss_mask: 0.2874  loss_rpn_cls: 0.03449  loss_rpn_loc: 0.03446  time: 0.4455  data_time: 0.0035  lr: 0.00077922  max_mem: 0M
[04/18 14:09:33] d2.utils.events INFO:  eta: 11:06:25  iter: 799  total_loss: 0.9949  loss_cls: 0.1597  loss_box_reg: 0.4803  loss_mask: 0.2795  loss_rpn_cls: 0.03603  loss_rpn_loc: 0.03773  time: 0.4458  data_time: 0.0034  lr: 0.0007992  max_mem: 0M
[04/18 14:09:42] d2.utils.events INFO:  eta: 11:06:22  iter: 819  total_loss: 1.024  loss_cls: 0.173  loss_box_reg: 0.5057  loss_mask: 0.2865  loss_rpn_cls: 0.0323  loss_rpn_loc: 0.03528  time: 0.4458  data_time: 0.0033  lr: 0.00081918  max_mem: 0M
[04/18 14:09:51] d2.utils.events INFO:  eta: 11:06:28  iter: 839  total_loss: 1.049  loss_cls: 0.1882  loss_box_reg: 0.505  loss_mask: 0.278  loss_rpn_cls: 0.03361  loss_rpn_loc: 0.03937  time: 0.4460  data_time: 0.0035  lr: 0.00083916  max_mem: 0M
[04/18 14:10:00] d2.utils.events INFO:  eta: 11:06:30  iter: 859  total_loss: 0.9733  loss_cls: 0.1573  loss_box_reg: 0.476  loss_mask: 0.2687  loss_rpn_cls: 0.02347  loss_rpn_loc: 0.03787  time: 0.4462  data_time: 0.0035  lr: 0.00085914  max_mem: 0M
[04/18 14:10:09] d2.utils.events INFO:  eta: 11:06:25  iter: 879  total_loss: 0.9652  loss_cls: 0.165  loss_box_reg: 0.4641  loss_mask: 0.2628  loss_rpn_cls: 0.02878  loss_rpn_loc: 0.03331  time: 0.4463  data_time: 0.0033  lr: 0.00087912  max_mem: 0M
[04/18 14:10:18] d2.utils.events INFO:  eta: 11:06:16  iter: 899  total_loss: 1.021  loss_cls: 0.1662  loss_box_reg: 0.5148  loss_mask: 0.2673  loss_rpn_cls: 0.03364  loss_rpn_loc: 0.03848  time: 0.4464  data_time: 0.0033  lr: 0.0008991  max_mem: 0M
[04/18 14:10:27] d2.utils.events INFO:  eta: 11:06:34  iter: 919  total_loss: 0.9986  loss_cls: 0.1612  loss_box_reg: 0.4964  loss_mask: 0.2632  loss_rpn_cls: 0.02452  loss_rpn_loc: 0.03679  time: 0.4467  data_time: 0.0035  lr: 0.00091908  max_mem: 0M
